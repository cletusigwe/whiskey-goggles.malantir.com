function d(e){return new Promise((o,n)=>{e.oncomplete=e.onsuccess=()=>o(e.result),e.onabort=e.onerror=()=>n(e.error)})}function f(e,o){const n=indexedDB.open(e);n.onupgradeneeded=()=>n.result.createObjectStore(o);const s=d(n);return(l,r)=>s.then(t=>r(t.transaction(o,l).objectStore(o)))}let c;function i(){return c||(c=f("keyval-store","keyval")),c}function u(e,o=i()){return o("readonly",n=>d(n.get(e)))}function p(e,o,n=i()){return n("readwrite",s=>(s.put(o,e),d(s.transaction)))}const y=async e=>{const o=[{key:"model",url:"/onnx/model.onnx",type:"blob",name:"model.onnx"},{key:"labels",url:"/onnx/labels.json",type:"json",name:"labels.json"},{key:"mean_std",url:"/onnx/mean_std.json",type:"json",name:"mean_std.json"}];for(const n of o)await u(n.key)||await new Promise((l,r)=>{const t=new XMLHttpRequest;t.open("GET",n.url,!0),t.responseType=n.type==="blob"?"blob":"json",t.onprogress=a=>{a.lengthComputable?e({loaded:a.loaded,total:a.total},n.name):e({loaded:a.loaded,total:0},n.name)},t.onload=async()=>{if(t.status===200){const a=(n.type==="blob",t.response);await p(n.key,a),l()}else r(new Error(`Failed to download ${n.name} (status: ${t.status})`))},t.onerror=()=>r(new Error(`Network error while downloading ${n.name}`)),t.send()})},m=async e=>{const o=await u(e);if(!o)throw new Error(`${e} not found in cache`);return o},b=async()=>{const e=["model","labels","mean_std"];for(const o of e)if(!await u(o))return!1;return!0};export{y as c,m as g,b as i};
